---
import { SITE, THEME } from "../../swiftsite.config";

const {
  title = SITE.title,
  description = SITE.description,
  ogImage = "/og.png",
  lang = SITE.lang,
} = Astro.props;
---
<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#ffffff" />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <link rel="icon" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/globals.css" />

    <!-- Light (iz configa) i Dark override -->
    <style>
      :root{
        --bg:{THEME.bg};
        --panel:{THEME.panel};
        --ink:{THEME.ink};
        --muted:{THEME.muted};
        --accent:{THEME.accent};
        --border:#e6e8ee;
        --max:1120px;
      }
      :root[data-theme="dark"]{
        --bg:#0d1117;
        --panel:#0f1521;
        --ink:#e6e9ef;
        --muted:#aeb6c2;
        --accent:#e24343;
        --border:#222834;
      }
    </style>

    <!-- Inicijalizacija teme + ‘system’ praćenje, bez treptanja -->
    <script id="theme-init">
      (() => {
        const KEY = "swiftsite-theme";            // light | dark | system
        const mq  = window.matchMedia("(prefers-color-scheme: dark)");
        const saved = (()=>{ try { return localStorage.getItem(KEY) } catch(_) { return null } })();
        const mode = saved || "system";

        function apply(mode){
          // Sačuvaj mod (light/dark/system)
          try { localStorage.setItem(KEY, mode) } catch(_) {}
          document.documentElement.setAttribute("data-theme-mode", mode);
          const effective = mode === "system" ? (mq.matches ? "dark" : "light") : mode;
          document.documentElement.setAttribute("data-theme", effective);
        }

        // Prvo postavljanje
        apply(mode);

        // Ako je 'system' – reaguj na promjenu OS teme
        mq.addEventListener?.("change", () => {
          const current = document.documentElement.getAttribute("data-theme-mode") || "system";
          if (current === "system") apply("system");
        });

        // Eksponiraj pomoćnu funkciju za header toggle
        window.__setThemeMode = apply;
      })();
    </script>
  </head>
  <body>
    <slot />
  </body>
</html>
