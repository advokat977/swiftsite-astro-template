---
import { SITE, FEATURES, ASSETS } from "../../swiftsite.config";

const links = [
  { href: "/", label: "Home" },
  FEATURES.gallery && { href: "/gallery", label: "Gallery" },
  FEATURES.blog && { href: "/insights", label: "Insights" },
  { href: "/thanks", label: "Thanks" },
].filter(Boolean);
---
<header class="shell">
  <div class="container bar">
    <a class="brand" href="/" aria-label={SITE.title}>
      <!-- Logo u maloj "piluloj" sa bijelom pozadinom da bude čitljiv i u dark modu -->
      <span class="logo-card">
        <img src={ASSETS.logoLight} alt="SwiftSite logo" width="132" height="28" loading="eager" />
      </span>
    </a>

    <nav class="nav">
      {links.map((l:any) => <a href={l.href}>{l.label}</a>)}
    </nav>

    <div class="actions">
      <button class="toggle" aria-label="Toggle theme" title="Toggle theme">🌙</button>
      <button class="burger" aria-label="Menu" aria-expanded="false" title="Menu">☰</button>
    </div>
  </div>
</header>

<nav class="drawer" hidden>
  <div class="container drawer-inner">
    {links.map((l:any) => <a href={l.href}>{l.label}</a>)}
  </div>
</nav>

<script>
  // Mobile drawer
  const burger = document.querySelector(".burger");
  const drawer = document.querySelector(".drawer");
  burger?.addEventListener("click", () => {
    const open = !drawer?.hasAttribute("hidden");
    if (open) { drawer?.setAttribute("hidden",""); burger.setAttribute("aria-expanded","false"); }
    else { drawer?.removeAttribute("hidden"); burger.setAttribute("aria-expanded","true"); }
  });

  // Theme toggle: light → dark → system → light
  const KEY = "swiftsite-theme";
  const btn = document.querySelector<HTMLButtonElement>(".toggle");
  function iconFor(mode){ return mode === "dark" ? "☀️" : mode === "light" ? "🖥️" : "🌙"; }
  function nextMode(mode){ return mode === "light" ? "dark" : mode === "dark" ? "system" : "light"; }
  function currentMode(){ return document.documentElement.getAttribute("data-theme-mode") || "system"; }
  function setMode(mode){
    window.__setThemeMode?.(mode);
    try { localStorage.setItem(KEY, mode) } catch(_) {}
    btn && (btn.textContent = iconFor(mode));
    btn && btn.setAttribute("title", `Theme: ${mode}`);
  }
  setMode(currentMode());
  btn?.addEventListener("click", () => setMode(nextMode(currentMode())));
</script>

<style>
.shell{
  position:sticky;top:0;z-index:50;
  backdrop-filter:saturate(160%) blur(8px);
  background:color-mix(in oklab, var(--bg) 85%, transparent);
  border-bottom:1px solid var(--border);
}
.bar{display:flex;align-items:center;justify-content:space-between;padding:14px 20px}
.brand{display:flex;align-items:center;gap:10px}
.logo-card{
  display:inline-flex;align-items:center;justify-content:center;
  padding:6px 10px;border-radius:12px;background:#fff;border:1px solid var(--border);
  box-shadow:0 2px 6px rgba(16,24,40,.06)
}
.logo-card img{display:block;height:28px;width:auto}
.nav{display:flex;gap:18px}
.nav a{color:var(--ink);text-decoration:none;border-bottom:2px solid transparent;padding-bottom:2px}
.nav a:hover{border-color:var(--ink)}
.actions{display:flex;gap:10px;align-items:center}
.toggle,.burger{
  background:#fff;border:1px solid var(--border);border-radius:10px;
  padding:8px 10px;line-height:1;cursor:pointer;font-size:16px;
}
:root[data-theme="dark"] .toggle,
:root[data-theme="dark"] .burger{
  background:#0f1521;border-color:#1c2330;color:var(--ink)
}
.drawer{background:var(--bg);border-bottom:1px solid var(--border)}
.drawer-inner{display:flex;flex-direction:column;gap:12px;padding:14px 20px}
@media (max-width: 880px){
  .nav{display:none}
  .burger{display:inline-block}
}
@media (min-width: 881px){
  .burger{display:none}
}
</style>
